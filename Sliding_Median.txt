#include <bits/stdc++.h> 
#include <ext/pb_ds/assoc_container.hpp> 

using namespace std; 
using namespace __gnu_pbds; 

// Policy based data structure 
typedef tree<int, null_type, 
			less_equal<int>, rb_tree_tag, 
			tree_order_statistics_node_update> 
	Ordered_set; 

void findMedian(int arr[], int n, 
				int k) 
{ 

	Ordered_set s; 

	for (int i = 0; i < k; i++) 
		s.insert(arr[i]); 

	if (1) { 

		// Value at index k/2 
		// in sorted list. 
		int ans = *s.find_by_order((k -1)/ 2); 

		cout << ans << " "; 

		for (int i = 0; i < n - k; i++) { 

			// Erasing Element out of window. 
			s.erase(s.find_by_order( 
				s.order_of_key( 
					arr[i]))); 

			// Inserting newer element 
			// to the window 
			s.insert(arr[i + k]); 

			// Value at index k/2 in 
			// sorted list. 
			ans = *s.find_by_order((k -1)/ 2); 

			cout << ans << " "; 
		} 
		cout << endl; 
	} 
}

int main() 
{ 
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, k;
    cin>>n>>k;
    int arr[n];
    for(int i=0;i<n;i++)
        cin>>arr[i];
    findMedian(arr, n, k); 
} 
